{"version":3,"sources":["Components/Cards/Datacard.js","Components/Cards/Cards.js","Components/Graphs/Visuals.js","Components/General/General.js","Components/Statewise/Statewise.js","App.js","index.js"],"names":["Datacard","props","Card","className","id","name","Body","header","body","Cards","Container","confirmed","recovered","deceased","Visuals","data","color","map","item","d","Date","date","getUTCFullYear","getMonth","getDate","y","parseInt","dailyconfirmed","x","dailyrecovered","dailydeceased","margin","top","right","bottom","left","xScale","type","format","yScale","min","max","stacked","reverse","axisBottom","orient","tickSize","tickPadding","tickValues","tickRotation","axisTop","axisRight","axisLeft","curve","enablePoints","colors","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemDirection","itemWidth","itemHeight","itemOpacity","symbolSize","symbolShape","General","data2","length","style","width","deaths","Statewise","rows","splice","key","state","active","deltaconfirmed","deltarecovered","deltadeaths","App","statewise","casesTimeSeries","setInterval","axios","get","then","response","setState","cases_time_series","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0db5f1c5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport \"./datacard.css\";\r\n\r\nconst Datacard = (props) => {\r\n  return (\r\n    <Card className=\"datacard\" id={props.name}>\r\n      <Card.Body>\r\n        <p className=\"header\">\r\n          <b>{props.header}</b>\r\n        </p>\r\n        <br />\r\n        <p className=\"count\">{props.body}</p>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Datacard;\r\n","import React from \"react\";\r\nimport Datacard from \"./Datacard\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport \"./Cards.css\";\r\n\r\nconst Cards = (props) => {\r\n  return (\r\n    <Container className=\"d-flex justify-content-center\">\r\n      <Datacard header=\"Confimed\" body={props.confirmed} name=\"confirmed\" />\r\n      <Datacard header=\"Recovered\" body={props.recovered} name=\"recovered\" />\r\n      <Datacard header=\"Deceased\" body={props.deceased} name=\"deceased\" />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport { ResponsiveLine } from \"@nivo/line\";\r\nimport \"./visuals.css\";\r\n\r\nconst Visuals = (props) => {\r\n  let data = [\r\n    {\r\n      id: \"confirmed\",\r\n      color: \"orange\",\r\n    },\r\n    {\r\n      id: \"recovered\",\r\n      color: \"hsl(120, 100%, 25%)\",\r\n    },\r\n    {\r\n      id: \"deaths\",\r\n      color: \"red\",\r\n    },\r\n  ];\r\n\r\n  data[0].data = props.data.map((item) => {\r\n    var d = new Date(`${item.date} 2020`);\r\n    let date =\r\n      d.getUTCFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n\r\n    return {\r\n      y: parseInt(item.dailyconfirmed),\r\n      x: date,\r\n    };\r\n  });\r\n  data[1].data = props.data.map((item) => {\r\n    var d = new Date(`${item.date} 2020`);\r\n    let date =\r\n      d.getUTCFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return {\r\n      y: parseInt(item.dailyrecovered),\r\n      x: date,\r\n    };\r\n  });\r\n  data[2].data = props.data.map((item) => {\r\n    var d = new Date(`${item.date} 2020`);\r\n    let date =\r\n      d.getUTCFullYear() + \"-\" + (d.getMonth() + 1) + \"-\" + d.getDate();\r\n    return {\r\n      y: parseInt(item.dailydeceased),\r\n      x: date,\r\n    };\r\n  });\r\n  let colors = [\"orange\", \"green\", \"red\"];\r\n  return (\r\n    <div className=\"charts\">\r\n      <ResponsiveLine\r\n        data={data}\r\n        margin={{ top: 50, right: 110, bottom: 70, left: 60 }}\r\n        xScale={{ type: \"time\", format: \"%Y-%m-%d\" }}\r\n        yScale={{\r\n          type: \"linear\",\r\n          min: \"auto\",\r\n          max: \"auto\",\r\n          stacked: false,\r\n          reverse: false,\r\n        }}\r\n        axisBottom={{\r\n          orient: \"bottom\",\r\n          format: \"%d %b\",\r\n          tickSize: 5,\r\n          tickPadding: 12,\r\n          tickValues: 10,\r\n          tickRotation: 45,\r\n        }}\r\n        axisTop={null}\r\n        axisRight={null}\r\n        axisLeft={{\r\n          orient: \"left\",\r\n          tickSize: 5,\r\n          tickPadding: 5,\r\n          tickRotation: 0,\r\n        }}\r\n        curve=\"natural\"\r\n        enablePoints={false}\r\n        colors={colors}\r\n        legends={[\r\n          {\r\n            anchor: \"top-right\",\r\n            direction: \"column\",\r\n            justify: false,\r\n            translateX: 100,\r\n            translateY: 0,\r\n            itemsSpacing: 0,\r\n            itemDirection: \"left-to-right\",\r\n            itemWidth: 80,\r\n            itemHeight: 20,\r\n            itemOpacity: 0.75,\r\n            symbolSize: 12,\r\n            symbolShape: \"circle\",\r\n          },\r\n        ]}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Visuals;\r\n","import Cards from \"../Cards/Cards\";\r\nimport React from \"react\";\r\nimport Visuals from \"../Graphs/Visuals\";\r\n\r\nconst General = (props) => {\r\n  if (props.data2.length > 0)\r\n    return (\r\n      <div\r\n        className=\"d-flex flex-column align-items-center\"\r\n        style={{ width: \"100%\" }}\r\n      >\r\n        <Cards\r\n          confirmed={props.data2[0].confirmed}\r\n          recovered={props.data2[0].recovered}\r\n          deceased={props.data2[0].deaths}\r\n        />\r\n        <Visuals data={props.data} />\r\n      </div>\r\n    );\r\n  else return <div></div>;\r\n};\r\n\r\nexport default General;\r\n","import React from \"react\";\r\nimport \"./statewise.css\";\r\n\r\nconst Statewise = (props) => {\r\n  let rows = props.data.splice(1, props.data.length - 1).map((item) => {\r\n    return (\r\n      <tr key={item.state}>\r\n        <td>{item.state}</td>\r\n        <td className=\"active\">\r\n          <p>Active</p>\r\n          {item.active}{\" \"}\r\n          <sub>\r\n            {item.deltaconfirmed}\r\n            <i\r\n              className={\r\n                item.deltaconfirmed > 0 ? \"fa fa-arrow-up\" : \"fa fa-arrow-down\"\r\n              }\r\n            ></i>\r\n          </sub>\r\n        </td>\r\n        <td className=\"recovered\">\r\n          <p>Recovered</p>\r\n          {item.recovered}{\" \"}\r\n          <sub>\r\n            {item.deltarecovered}\r\n            <i\r\n              className={\r\n                item.deltarecovered > 0 ? \"fa fa-arrow-up\" : \"fa fa-arrow-down\"\r\n              }\r\n            ></i>\r\n          </sub>\r\n        </td>\r\n        <td className=\"deaths\">\r\n          <p>Deaths</p>\r\n          {item.deaths}{\" \"}\r\n          <sub>\r\n            {item.deltadeaths}\r\n            <i\r\n              className={\r\n                item.deltadeaths > 0 ? \"fa fa-arrow-up\" : \"fa fa-arrow-down\"\r\n              }\r\n            ></i>\r\n          </sub>\r\n        </td>\r\n      </tr>\r\n    );\r\n  });\r\n  return (\r\n    <table>\r\n      <tbody>{rows}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Statewise;\r\n","import React from \"react\";\nimport General from \"./Components/General/General\";\nimport Statewise from \"./Components/Statewise/Statewise\";\nimport axios from \"axios\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      statewise: [],\n      casesTimeSeries: [],\n    };\n  }\n  componentDidMount() {\n    setInterval(() => {\n      axios.get(\"https://api.covid19india.org/data.json\").then((response) => {\n        this.setState({\n          statewise: response.data.statewise,\n          casesTimeSeries: response.data.cases_time_series,\n        });\n      });\n    }, 2000);\n  }\n  render() {\n    return (\n      <div className=\"App d-flex flex-column align-items-center\">\n        <p id=\"title\">\n          <b>CovidTrack19</b>\n        </p>\n        <General\n          data={this.state.casesTimeSeries}\n          data2={this.state.statewise}\n        />\n\n        <Statewise data={this.state.statewise} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}